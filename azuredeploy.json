{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "mtcDesignator": {
      "defaultValue": "mTC1",
      "type": "string",
      "metadata": {
        "description": "A 3 or 4 character designator for the Microsoft Technology Center."
      }
    }
  },
  "variables": {
    "mtcDesignatorTitleCase": "[ concat(toUpper(first(parameters('mtcDesignator'))), toLower(substring(parameters('mtcDesignator'), 1, sub(length(parameters('mtcDesignator')), 1)))) ]",
    "storageAccountName": "[ concat('pdlexsa', toLower(parameters('mtcDesignator')), uniqueString(resourceGroup().id)) ]",
    "eventHubNamespace": "[ concat('PdLexTelEh', variables('mtcDesignatorTitleCase')) ]",
    "blockChainEventHubSharedAccessKeyName": "[ concat(variables('eventHubNamespace'), '/blockchain/iothubroutes_', variables('iotHubName')) ]",
    "iotHubName": "[ concat('PdLexTelIot', variables('mtcDesignatorTitleCase')) ]"
  },
  "resources": [
    {
      "comments": "Backing storage account for images generated by the edge device.",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[ variables('storageAccountName') ]",
      "apiVersion": "2016-01-01",
      "kind": "Storage",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "location": "[ resourceGroup().location ]",
      "tags": {},
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "comments": "Sink for telemetry routed from the IoT hub.",
      "type": "Microsoft.EventHub/namespaces",
      "name": "[ variables('eventHubNamespace') ]",
      "apiVersion": "2015-08-01",
      "kind": "EventHub",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "location": "[ resourceGroup().location ]",
      "tags": {},
      "scale": null,
      "properties": {
        "serviceBusEndpoint": "[ concat('https://', variables('eventHubNamespace'), '.servicebus.windows.net:443/') ]",
        "enabled": true
      },
      "dependsOn": [],
      "resources": [
        {
          "comments": "Event hub shared access key.",
          "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
          "name": "[ concat(variables('eventHubNamespace'), '/RootManageSharedAccessKey') ]",
          "apiVersion": "2015-08-01",
          "scale": null,
          "properties": {
            "rights": [
              "Listen",
              "Manage",
              "Send"
            ]
          },
          "dependsOn": [
            "[ resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace')) ]"
          ]
        },
        {
          "comments": "Blockchain event hub",
          "type": "Microsoft.EventHub/namespaces/eventhubs",
          "name": "[ concat(variables('eventHubNamespace'), '/blockchain') ]",
          "apiVersion": "2015-08-01",
          "location": "[ resourceGroup().location ]",
          "scale": null,
          "properties": {
            "messageRetentionInDays": 7,
            "partitionCount": 2,
            "partitionIds": [
              "0",
              "1"
            ]
          },
          "dependsOn": [
            "[ resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace')) ]"
          ],
          "resources": [
            {
              "comments": "Blockchain shared access key.",
              "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
              "name": "[ variables('blockChainEventHubSharedAccessKeyName') ]",
              "apiVersion": "2015-08-01",
              "location": "[ resourceGroup().location ]",
              "scale": null,
              "properties": {
                "rights": [
                  "Send"
                ]
              },
              "dependsOn": [
                "[ resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace')) ]",
                "[ resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespace'), 'blockchain') ]"
              ]
            },
            {
              "comments": "Time series insights event hub consumer group.",
              "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
              "name": "[ concat(variables('eventHubNamespace'), '/blockchain/tsi') ]",
              "apiVersion": "2015-08-01",
              "location": "[ resourceGroup().location ]",
              "scale": null,
              "dependsOn": [
                "[ resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace')) ]",
                "[ resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespace'), 'blockchain') ]"
              ]
            }
          ]
        }
      ]
    },
    {
      "comments": "IoT hub for telemetry ingestion.",
      "type": "Microsoft.Devices/IotHubs",
      "name": "[ variables('iotHubName') ]",
      "apiVersion": "2016-02-03",
      "location": "[ resourceGroup().location ]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "tags": {},
      "scale": null,
      "properties": {
        "ipFilterRules": [],
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 7,
            "partitionCount": 4,
            "partitionIds": [
              "0",
              "1",
              "2",
              "3"
            ],
            "path": "[ variables('iotHubName') ]"
          },
          "operationsMonitoringEvents": {
            "retentionTimeInDays": 7,
            "partitionCount": 4,
            "partitionIds": [
              "0",
              "1",
              "2",
              "3"
            ],
            "path": "[ concat(variables('iotHubName'),'-operationmonitoring') ]"
          }
        },
        "operationsMonitoringProperties": {
          "events": {
            "None": "None",
            "Connections": "None",
            "DeviceTelemetry": "None",
            "C2DCommands": "None",
            "DeviceIdentityOperations": "None",
            "FileUploadOperations": "None",
            "Routes": "None"
          }
        },
        "routing": {
          "endpoints": {
            "serviceBusQueues": [],
            "serviceBusTopics": [],
            "eventHubs": [
              {
                "connectionString": "[ listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('eventHubNamespace'), 'blockchain', concat('iothubroutes_', variables('iotHubName'))), providers('Microsoft.EventHub', 'namespaces').apiVersions[0]).secondaryConnectionString ]",
                "name": "Blockchain",
                "subscriptionId": "[ subscription().subscriptionId ]",
                "resourceGroup": "[ resourceGroup().name ]"
              }
            ]
          },
          "routes": [
            {
              "name": "Blockchain_Rt",
              "source": "DeviceMessages",
              "condition": "$body.ThunderboardReact.temperature > 20",
              "endpointNames": [
                "Blockchain"
              ],
              "isEnabled": true
            },
            {
              "name": "Telemetry_Rt",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": [
                "events"
              ],
              "isEnabled": true
            }
          ],
          "fallbackRoute": {
            "name": "$fallback",
            "source": "DeviceMessages",
            "condition": "true",
            "endpointNames": [
              "events"
            ],
            "isEnabled": true
          }
        },
        "storageEndpoints": {
          "$default": {
            "sasTtlAsIso8601": "PT1H",
            "connectionString": "[ concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value) ]",
            "containerName": "images"
          }
        },
        "enableFileUploadNotifications": true,
        "cloudToDevice": {
          "maxDeliveryCount": 10,
          "defaultTtlAsIso8601": "PT1H",
          "feedback": {
            "lockDurationAsIso8601": "PT1M",
            "ttlAsIso8601": "PT1H",
            "maxDeliveryCount": 10
          }
        },
        "features": "None"
      },
      "dependsOn": [
        "[ resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespace')) ]",
        "[ resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')) ]"
      ],
      "resources": [
        {
          "comments": "Time series insights iot hub consumer group.",
          "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
          "name": "[ concat(variables('iotHubName'), '/events/tsi') ]",
          "apiVersion": "2016-02-03",
          "dependsOn": [
            "[ concat('Microsoft.Devices/Iothubs/', variables('iotHubName')) ]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "iotHubConnectionString": {
      "type": "string",
      "value": "[ concat('HostName=', variables('iotHubName'), '.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys', variables('iotHubName'), 'iothubowner'), providers('Microsoft.Devices', 'IotHubs').apiVersions[0]).secondaryKey) ]"
    }
  }
}
